package std/lang.interop

data InteropValue(obj: any)

pub fn showMembers(obj: any) {
    val members = getMembers(obj, false)
    var index = 0
    while(index < members.size()) {
        println(members[index] as string)
        index = index + 1
    }
}

pub fn lookup(name: string): InteropValue {
    InteropValue(lookupHostSymbol(name))
}

pub fn invoke(iv: InteropValue, name: string): InteropValue {
    InteropValue(invokeMember(iv.obj, name, array(0,0)))
}

pub fn invoke(iv: InteropValue, name: string, args: array[any]): InteropValue {
    InteropValue(invokeMember(iv.obj, name, args))
}

pub fn asInt(iv: InteropValue): int {
    iv.obj as int
}