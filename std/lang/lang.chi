package std/lang

import std/io { readString }

fn load(filePath: string): any {
    val code = readString(filePath)
    eval(code)
}

data Option[T] = Just(value: T) | Nothing
data Result[T, E] = Ok(value: T) | Err(error: E)


fn map[T,R](option: Option[T], f: (T) -> R): Option[R] {
    when {
        option is Just -> Just(f(option.value))
        else -> Nothing
    }
}
